import React from 'react';

STEPS:
1. extracting the minimum value from a bond
2. extracting the maximum value from a bond
3. substracting both values
4. based on a substraction result displaying the top 3 highest numbers
5. connecting the results within react application using props



function noProfit(arr) {
  let noProfit = -1;
  let min = arr[0];
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] > min && noProfit < arr[i] - min) {
      noProfit = arr[i] - min;
    }
    if (arr[i] < min) {
      min = arr[i];
    }
  }
  return noProfit;
}


//passing the values to the table via props object to display the data
function Table(props) {

 let data= props.data.reduce((acc,ele)=>{
    let values=Object.values(ele);// getting all the values
    let bond_name=values.shift(); // removing the first value as its non integer
    let temp={} ; // to store the attributes for every bond
      temp.profit= maxProfit(values) > 0 ? maxProfit(values):-1;
      temp.bond_name=bond_name;
    acc.push(temp);
      return acc;
     },[])
   
// sorting it on the basis of two keys
 data.sort(function(a, b) {
  return b["profit"] - a["profit"] || b["bond_name"] - a["bond_name"];
});



/// it gets the top three
let top_three=data.reduce((acc,ele)=>{

  let acc_find=acc.find(el=>el.profit==ele.profit);
  
  if(!acc_find)
  {
    ele.bond_name=`bond_${ele.bond_name}`
  acc.push(ele);
  }
  return acc;
  },[]);



  return (
    <div>
      <table className="striped">
        <thead>
          <tr>
            <th>bond</th>
            <th>value</th>
          </tr>
        </thead>
        <tbody>
          {
            data.map(row => (
              <tr>
                <td>{row.profit}</td>
                <td>bond_{row.bond_name}</td>
                <td>bond_{row.top_three}</td>
              </tr>
            ))
          }
        </tbody>
      </table>
  
    </div>
  );
}

export default Table;